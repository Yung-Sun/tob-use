import{p as n}from"./app.fad36ee9.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="asynccomputed" tabindex="-1"><a class="header-anchor" href="#asynccomputed" aria-hidden="true">#</a> asyncComputed</h1><p>\u5F02\u6B65\u7684\u8BA1\u7B97\u5C5E\u6027</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840" aria-hidden="true">#</a> \u57FA\u7840</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> asyncComputed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/uni_modules/tob-use&#39;</span>

<span class="token comment">// \u6A21\u62DF\u5F02\u6B65\u8BF7\u6C42</span>
<span class="token keyword">const</span> <span class="token function-variable function">mock</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>


<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u5F02\u6B65\u7684\u8BA1\u7B97\u5C5E\u6027</span>
<span class="token comment">// \u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u521D\u59CB\u5316\u72B6\u6001</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u62DF\u8BF7\u6C42\u6570\u636E&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> response
    <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token string">&#39;\u521D\u59CB\u72B6\u6001&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><br><h3 id="\u8BC4\u4F30\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u8BC4\u4F30\u72B6\u6001" aria-hidden="true">#</a> \u8BC4\u4F30\u72B6\u6001</h3><p>\u5373\u5F53\u524D\u7684\u5F02\u6B65\u662F\u5426\u5904\u4E8E\u8FD0\u884C\u4E2D\u72B6\u6001</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> asyncComputed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/uni_modules/tob-use&#39;</span>

<span class="token keyword">const</span> evaluating <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span>
  <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* \u7701\u7565\u903B\u8F91 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  evaluating<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><br><h3 id="\u53D6\u6D88" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88" aria-hidden="true">#</a> \u53D6\u6D88</h3><p>\u6709\u65F6\u5019\u6211\u4EEC\u53EF\u80FD\u4F1A\u5728\u8FD9\u6B21\u5F02\u6B65\u4ECD\u5728\u8FDB\u884C\u671F\u95F4\u91CD\u65B0\u89E6\u53D1\u5F02\u6B65\u66F4\u65B0\uFF0C\u6B64\u65F6\u53EF\u4EE5\u7528 <code>onCancel</code> \u6CE8\u518C\u56DE\u8C03\u6765\u7EC8\u6B62\u4ECD\u672A\u5B8C\u6210\u7684\u5F02\u6B65\u3002</p><p><code>onCancel</code> \u6CE8\u518C\u7684\u56DE\u8C03\u5C06\u5728\u8FD9\u6B21\u5F02\u6B65\u672A\u5B8C\u6210\u65F6\uFF0C\u4E0B\u6B21\u5F02\u6B65\u5F00\u59CB\u524D\u89E6\u53D1\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> asyncComputed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/uni_modules/tob-use&#39;</span>

<span class="token comment">// \u6A21\u62DF\u7684\u5E26\u7EC8\u6B62\u7684\u5F02\u6B65\u8BF7\u6C42</span>
<span class="token keyword">const</span> <span class="token function-variable function">mock</span> <span class="token operator">=</span> payload <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> stop
    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span>resolve <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token function">resolve</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token function-variable function">stop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> 
    <span class="token keyword">return</span> <span class="token punctuation">[</span>request<span class="token punctuation">,</span> stop<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6A21\u62DF\u4F9D\u8D56</span>
<span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>onCancel<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> <span class="token punctuation">[</span>request<span class="token punctuation">,</span> stop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mock</span><span class="token punctuation">(</span>dep<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

   <span class="token comment">// \u4E0B\u6B21\u66F4\u65B0\u524D\u7EC8\u6B62\u8FD9\u6B21\u672A\u5B8C\u6210\u7684\u5F02\u6B65</span>
   <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 

   <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> request
   <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

 <span class="token comment">// \u4FEE\u6539\u4E86\uFF0C\u91CD\u65B0\u89E6\u53D1\u8BA1\u7B97\u5C5E\u6027\u66F4\u65B0</span>
delay<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">2</span>
<span class="token comment">// \u4E0A\u4E00\u6B21\u5F02\u6B65\u672A\u5B8C\u6210\u671F\u95F4\u518D\u6B21\u89E6\u53D1\u8BA1\u7B97\u5C5E\u6027\u66F4\u65B0</span>
<span class="token comment">// \u5C06\u7EC8\u6B62\u4E0A\u4E00\u6B21\u8BF7\u6C42\uFF0C\u6539\u7528\u5F53\u524D\u8BF7\u6C42</span>
delay<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">3</span>  
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><br><h3 id="\u61D2\u60F0\u7684" tabindex="-1"><a class="header-anchor" href="#\u61D2\u60F0\u7684" aria-hidden="true">#</a> \u61D2\u60F0\u7684</h3><p>\u5F00\u542F <code>lazy</code> \u4E4B\u540E\uFF0C\u53EA\u6709\u5728\u7ED3\u679C\u7B2C\u4E00\u6B21\u88AB\u8BBF\u95EE\u65F6\u624D\u89E6\u53D1\u5F02\u6B65</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> asyncComputed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/uni_modules/tob-use&#39;</span>

<span class="token keyword">const</span> evaluating <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token comment">// \u8FD9\u91CC\u4E0D\u4F1A\u89E6\u53D1\u5F02\u6B65</span>
<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span>
  <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* \u7701\u7565\u903B\u8F91 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> lazy<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> evaluating <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u8FDB\u884C\u7B2C\u4E00\u6B21\u8BBF\u95EE\uFF0C\u5373 getter \u65F6\u624D\u89E6\u53D1</span>
userInfo<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><br><h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h3><p><code>onError</code> \u53EF\u4EE5\u6355\u83B7\u5230\u5F02\u6B65\u8FDB\u884C\u8FC7\u7A0B\u4E2D\u7684\u9519\u8BEF</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> asyncComputed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/uni_modules/tob-use&#39;</span>

<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span>
  <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* \u7701\u7565\u903B\u8F91 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token function-variable function">onError</span><span class="token operator">:</span> e <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><br><br><h2 id="\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> \u6CE8\u610F\u4E8B\u9879</h2><ul><li>\u5F02\u6B65\u8BBF\u95EE\u7684\u4F9D\u8D56\u9879\u4E0D\u4F1A\u89E6\u53D1\u5BF9\u5F02\u6B65\u7684\u91CD\u65B0\u8BA1\u7B97</li><li>\u5373\u4F7F\u5F02\u6B65\u8BA1\u7B97\u5C5E\u6027\u672A\u88AB <code>getter</code> \u8BBF\u95EE\uFF0C\u4E5F\u4F1A\u6267\u884C\u5F02\u6B65\u3002\u9664\u975E\u8BBE\u7F6E <code>lazy</code> \u4E3A <code>true</code></li></ul><p>\u666E\u901A\u7684\u8BA1\u7B97\u5C5E\u6027</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> double <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u88AB getter \u6CDB\u95EE\u4E86&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// double \u8BA1\u7B97\u5C5E\u6027\u91CC\u7684\u56DE\u8C03\u5C06\u4E0D\u4F1A\u89E6\u53D1</span>
<span class="token comment">// \u9664\u975E\u4F60\u8FDB\u884C getter \u8BBF\u95EE\uFF0C\u5C1D\u8BD5\u53D6\u6D88\u4E0B\u8FB9\u7684\u6CE8\u91CA \u{1F447}</span>

<span class="token comment">// double.value</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5F02\u6B65\u8BA1\u7B97\u5C5E\u6027</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> asyncComputed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/uni_modules/tob-use&#39;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> double <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5373\u4F7F\u4E0D getter \u8BBF\u95EE\u6211\u4E5F\u4F1A\u6267\u884C&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> triple <span class="token operator">=</span> <span class="token function">asyncComputed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u88AB\u8BBE\u7F6E\u4E86 lazy\uFF0C\u90A3\u6211\u53EA\u80FD\u5728 getter \u8BBF\u95EE\u65F6\u6267\u884C\u4E86&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> lazy<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5C1D\u8BD5\u89E3\u5F00\u4E0B\u8FB9\u7684\u6CE8\u91CA \u{1F447}</span>

<span class="token comment">// triple.value</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,30);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
